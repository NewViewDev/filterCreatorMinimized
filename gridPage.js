var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
var xSize=document.getElementById("xSize"),ySize=document.getElementById("ySize"),grid=document.getElementById("grid"),currBox=document.getElementById("redEq"),filterButton=document.getElementById("filter"),pictureBox=document.getElementById("picture"),addNum=document.getElementById("addNum"),numBox=document.getElementById("customNum"),redButton=document.getElementById("redSquare"),greenButton=document.getElementById("greenSquare"),blueButton=document.getElementById("blueSquare"),equationButtons=
[redButton,greenButton,blueButton],redEq=document.getElementById("redEq"),greenEq=document.getElementById("greenEq"),blueEq=document.getElementById("blueEq"),equationBoxes=[redEq,greenEq,blueEq],open=document.getElementById("openParen"),closed=document.getElementById("closedParen");console.log("Running JS");remakeGrid();open.addEventListener("click",function(){return addSign("(")});closed.addEventListener("click",function(){return addSign(")")});
document.getElementById("sizeInput").addEventListener("submit",remakeGrid);filterButton.addEventListener("click",filterDataGather);addNum.addEventListener("click",function(a){0<currBox.childElementCount&&addSign("+");a=createSquare(numBox.value,[],"value");a.value=numBox.value;currBox.appendChild(a)});
for(var $jscomp$iter$0=$jscomp.makeIterator(equationButtons),$jscomp$key$button=$jscomp$iter$0.next();!$jscomp$key$button.done;$jscomp$key$button=$jscomp$iter$0.next()){var button=$jscomp$key$button.value;button.addEventListener("click",switchEquation)}xSize.addEventListener("change",function(){ySize.value=xSize.value});ySize.addEventListener("change",function(){xSize.value=ySize.value});setup();function setup(){}
function remakeGrid(){grid.innerHTML="";var a="repeat("+xSize.value.toString()+", 50px)";grid.style["grid-template-columns"]="repeat("+ySize.value.toString()+", 50px)";grid.style["grid-template-rows"]=a;for(a=-(xSize.value-1)/2;a<=(xSize.value-1)/2;++a)for(var b=-(ySize.value-1)/2;b<=(ySize.value-1)/2;++b){var c=createSquare(b.toString()+","+a.toString(),[{name:"XgridIndex",value:b},{name:"YgridIndex",value:a}],"square");c.addEventListener("click",function(d){addToEquation(d.target)});grid.appendChild(c)}}
function createSquare(a,b,c){var d=document.createElement("BUTTON");d.innerHTML=a;d.className="gridSquares";d.type=c;a=$jscomp.makeIterator(b);for(b=a.next();!b.done;b=a.next())b=b.value,d.setAttribute(b.name,b.value);return d}function switchEquation(a){switch(a.target.id){case "redSquare":currBox=redEq;break;case "greenSquare":currBox=greenEq;break;case "blueSquare":currBox=blueEq}}
function addSign(a){var b=document.createElement("BUTTON");b.className="signs";b.innerHTML=a;b.sign=a;b.type="sign";b.addEventListener("click",changeSign);currBox.appendChild(b)}function changeSign(a){a=a.target;switch(a.innerHTML){case "+":a.innerHTML="-";a.sign="-";break;case "-":a.innerHTML="*";a.sign="*";break;case "*":a.innerHTML="/";a.sign="/";break;case "/":a.innerHTML="+",a.sign="+"}}
function changeColor(a){switch(a.color){case 0:a.style["background-color"]="rgb(0, 255, 0)";a.color=1;break;case 1:a.style["background-color"]="rgb(0, 0, 255)";a.color=2;break;default:a.style["background-color"]="rgb(255, 0, 0)",a.color=0}}function equationSquares(a){var b=a.target;changeColor(b);!0===a.ctrlKey&&b.remove()}
function addToEquation(a){var b=currBox.childNodes[currBox.childNodes.length-1];void 0!==b&&"square"===b.getAttribute("type")&&addSign("+");a=a.cloneNode(!0);a.style["background-color"]="rgb(255, 0, 0)";a.color=0;a.addEventListener("click",equationSquares);currBox.appendChild(a)}
function equationsToArray(a){function b(g,e){var h=e.getAttribute("type");void 0===h&&console.log("Undefined type warning.");"square"===h&&g.push({loc:[e.getAttribute("XgridIndex"),e.getAttribute("YgridIndex")],color:e.color,type:"square"});"sign"===h&&g.push({sign:e.innerHTML,type:"sign"});"value"===h&&g.push({value:e.value,type:"value"});return g}var c=[];a=$jscomp.makeIterator(a);for(var d=a.next();!d.done;d=a.next())c.push(nodeListToArr(d.value.childNodes).reduce(b,[]));return c}
function nodeListToArr(a){return Array.from(a)}var canvasBefore=document.getElementById("canvasBefore"),canvasAfter=document.getElementById("canvasAfter"),ctxB=canvasBefore.getContext("2d"),ctxA=canvasAfter.getContext("2d");
function filterDataGather(){if(void 0===pictureBox.files[0])window.alert("Please supply an image file.");else{var a=void 0,b=equationsToArray(equationBoxes),c=new Image;c.src=URL.createObjectURL(pictureBox.files[0]);c.onload=function(){ctxB.canvas.width=c.width;ctxB.canvas.height=c.height;ctxA.canvas.width=c.width;ctxA.canvas.height=c.height;ctxB.drawImage(c,0,0);a=ctxB.getImageData(0,0,c.width,c.height);filterImage(a,b,c.height,c.width)}}}
function filterImage(a,b,c,d){c=a.data;for(var g=JSON.parse(JSON.stringify(c)),e=0;e<c.length;){for(var h=e,n=[0,0,0],l=0;l<b.length;++l){for(var k="",p=$jscomp.makeIterator(b[l]),f=p.next();!f.done;f=p.next()){f=f.value;if("square"===f.type){var m=findColorIndx(h,f.loc,d,c.length,f.color);0<=m?void 0===g[m]?(console.log("Undefined pixel location: "+m.toString()),k+="0"):k+=g[m]:k+="0"}"sign"===f.type&&(k+=f.sign);"value"===f.type&&(k+=f.value)}n[l]=math.evaluate(k)}changeRGB(e,c,n);e+=4}ctxA.putImageData(a,
0,0)}function findColorIndx(a,b,c,d,g){var e=4*b[0];b=4*b[1]*c;return 0>b+a||b+a>=d||0>e+a||e+a>=d?-1:a+b+e+g}function changeRGB(a,b,c){b[a]=c[0];b[a+1]=c[1];b[a+2]=c[2]};
